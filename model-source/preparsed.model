% [IrisToolbox] autogenerated preparsed model source code 04-Oct-2022 17:23:58
%
% * Model/pam2_ce_v2.model


!transition-variables
    "Private Consumption" C
    "Total Investment" I
    "Local Intermediate Production" Y
    "Consumer Prices" Pc
    "Investment Goods Prices" Pi
    "Intermediate Goods Prices" Py
    "Labor in Local Production" N
    "Variables Labor in Local Production" NN
    "Capital in Local Production" K, k
    "Nominal Wage Rate" W 
    "Flexible Wage Rate (Absent Rigidities" Wflex
    "Price of Capital in Local Production" Pk
    "Rental Rate of Capital in Local Production" q
    "Local-Currency Base Rate" R , R_bar
    "Household Interest Rate" Rh 
    "Shadow Value of Household Budget Constraint" LAMBDA
    "Household Net Worth" Vh
    "Disposable Labor Income" DLI
    "Auxiliary Calibration Constant" PcC_Vh_nu0
    "Nominal GDP" NGDP 
    "Government Position to GDP" Bg_NGDP
    "Government Rate" Rg
    "Government Consumption to GDP" PcG_NGDP
    "Government Lump-Sum Taxes to GDP" TXls_NGDP

    
    "Private Consumption to GDP" PcC_NGDP
    "Total Investmen to GDP" PiI_NGDP
    "Disposable Labor Income to GDP" DLI_NGDP
    "Real Disposable Labor Income" DLI_Pc
    "Profits of Consumer Goods Distributors to GDP" PIEc_NGDP
    "Profits of Investment Goods Distributors to GDP" PIEi_NGDP
    "Profits of Local Intermediate Producers to GDP" PIEy_NGDP
    "Wage Bill to GDP" WN_NGDP
    "Capital renals to GDP" qPkk_NGDP
    "Real Wage Rate" W_Pc
    "Real Rental Price of Capital in Local Production" qPk_Pc

    "Labor-Augmenting Productivity Index" A


!parameters

    
    "Discount Factor" beta
    "Inverse of Labor Supply Elasticity" eta
    "Labor Supply Scale Parameter" upsilon
    "Deprecition of Capital" delta
    "Markup of Consumer Goods Distributors" mu_C
    "Markup of Investment Goods Distributors" mu_I
    "Markup of Intermediate Producers" mu_Y
    "Overhead Labor in Local Production" n
    "Labor Share of Local Production" gamma_N

    
    "S/S Rate of Change in Overall Productivity" ss_dA
    "S/S Level of Overal Productivity" ss_A
    "S/S Rate of Change in Consumer Prices" ss_dPc

    "S/S Government Position to GDP" ss_Bg_NGDP
    "S/S Government Consumption to GDP" ss_PcG_NGDP
    
    
    "Utility from Net Worth Slope Parameter" nu
    "Utility from Net Worth Intercept Parameter" nu0 
    "Current Income Dependence of Consumption" psi_DLI
    "Myopia in Final Goods Price Setting" beta_P
    beta_K

    
    "Habit in Consumption" psi_C
    "Autoregression in Real WAge" rho_W
    "Autoregression in Productivity" rho_A
    "Price Adjustment Cost of Consumer Goods Distributors" xi_Pc
    "Price Adjustment Cost of Investment Goods Distributors" xi_Pi
    "Investment Adjustment Cost in Local Production" xi_I

    
    "Autoregression in Monetary Policy Function" rho_R
    "Autoregression in Policy Neutral Rate" rho_R_bar
    "Reaction to Inflation in Monetary Policy Function" kappa_dPc

    
    "Self-Correction in Government Consumption" lambda_G1
    "Stabilization of Government Debt through Government Consumption" lambda_G2
    "Self-Correction in Lump-Sum Taxes" lambda_TXls1
    "Stabilization of Government Debt through Lump-Sum Taxes" lambda_TXls2


!log-variables

    !all-but
    Bg_NGDP
    PcC_Vh_nu0
    PcG_NGDP
    TXls_NGDP
    PIEc_NGDP
    PIEi_NGDP
    PIEy_NGDP


!transition-shocks

    shk_A
    shk_G
    shk_TXls


!transition-equations


    LAMBDA*Pc*[ C - (psi_DLI*DLI_Pc + psi_C*C{-1}*ss_dA) ] = (1 - (psi_DLI*&DLI_NGDP/&PcC_NGDP + psi_C)) !! LAMBDA*Pc*C = 1;


    LAMBDA = LAMBDA{+1}*Rh*beta + nu*(Pc*C/Vh - nu0)/(Pc*C);

    
    DLI =# W*N - TXls_NGDP*NGDP;

    
    Vh =# Pk*K + Bg_NGDP*NGDP;

    
    PcC_Vh_nu0 = Pc*C/Vh - nu0;


    LAMBDA*Wflex = upsilon*(N)^eta !! LAMBDA*W = upsilon*(N)^eta;

    
    log(W_Pc) = rho_W*log(ss_dA*W_Pc{-1}) + (1-rho_W)*log(Wflex/Pc) !! W = Wflex;


    Pk = Pi*(1 + xi_I*[ log(I) - log(I{-1}) - log(ss_dA) ] - beta_K*beta*xi_I*[ log(I{+1}) - log(I) - log(ss_dA) ]) !! Pk = Pi;

    
    K = (1-delta)*K{-1} + I;


    LAMBDA*Pk = beta_K*beta*LAMBDA{+1}*[ q{+1}*Pk{+1} + Pk{+1}*(1-delta) ] + nu*(Pc*C/Vh - nu0)*Pk/(Pc*C) ;


    mu_C*Py = Pc*[1 + (mu_C-1)*(xi_Pc*[ log(dPc) - log(dPc{-1}) ] - beta*beta_P*xi_Pc*[ log(dPc{+1}) - log(dPc) ])] !! Pc = mu_C*Py;

    
    mu_I*Py = Pi*[1 + (mu_I-1)*(xi_Pi*[ log(dPi) - log(dPi{-1}) ] - beta*xi_Pi*[ log(dPi{+1}) - log(dPi) ])] !! Pi = mu_I*Py;


    NN = N - n*&N;

    
    Y = (A*NN)^gamma_N * k^(1-gamma_N);

    
    gamma_N*Py*Y = mu_Y*W*NN;

    
    (1-gamma_N)*Py*Y = mu_Y*q*Pk*k;


    log(R) = rho_R*log(R{-1}) + (1-rho_R)*(log(R_bar) + kappa_dPc*(log(d4Pc{+3})/4-log(ss_dPc))) !! dPc = ss_dPc;

    R_bar = rho_R_bar*R_bar{-1} + (1-rho_R_bar)*&R !! R_bar = R;


    (log(A)-log(A{-1})) = rho_A*(log(A{-1})-log(A{-1-1})) + (1-rho_A)*[log(ss_dA) + shk_A] !! A = ss_dA*A{-1};


    Bg_NGDP =# Rg{t-1}*Bg_NGDP{-1}*NGDP{-1}/NGDP - TXls_NGDP + PcG_NGDP;

    
    TXls_NGDP = TXls_NGDP{-1} - lambda_TXls1*(TXls_NGDP{+8} - &TXls_NGDP) + lambda_TXls2*(Bg_NGDP{+8} - &Bg_NGDP) + shk_TXls !! Bg_NGDP = ss_Bg_NGDP;

    
    PcG_NGDP = PcG_NGDP{-1} - lambda_G1*(PcG_NGDP{+8} - &PcG_NGDP) - lambda_G2*(Bg_NGDP{+8} - &Bg_NGDP) + shk_G !! PcG_NGDP = ss_PcG_NGDP;


    Y = C + I + (PcG_NGDP*NGDP/Pc);
    k = K{-1};


    NGDP =# Pc*C + PcG_NGDP*NGDP + Pi*I;


    Rg = R;
    Rh = R;


    PcC_NGDP =# Pc*C / NGDP;
    PiI_NGDP = Pi*I / NGDP;
    DLI_NGDP =# DLI / NGDP;

    PIEc_NGDP =# (Pc - Py)*(C+(PcG_NGDP*NGDP/Pc))/NGDP;
    PIEi_NGDP =# (Pi - Py)*I / NGDP;
    PIEy_NGDP =# (Py*Y - (W*N + q*Pk*k)) / NGDP;
    WN_NGDP = W*N / NGDP;
    qPkk_NGDP = q*Pk*k / NGDP;


    W_Pc = W / Pc;
    qPk_Pc = q*Pk / Pc;
    DLI_Pc = DLI / Pc;


    !variables
        dPc
    !equations
        dPc = Pc/Pc{-1};

    !variables
        dPi
    !equations
        dPi = Pi/Pi{-1};

    !variables
        dW
    !equations
        dW = W/W{-1};


    !variables
        d4Pc
    !equations
        d4Pc = Pc/Pc{-4};


    !transition-variables
        R4, r4__
    !log-variables
        !all-but
        r4__
    !transition-equations
        log(R4) = (((log(R))+(log(R{+1}))+(log(R{+2}))+(log(R{+3})))/4);
        r4__ =# 100*(R4^4 - 1);


    !transition-variables
        R8, r8__
    !log-variables
        !all-but
        r8__
    !transition-equations
        log(R8) = (((log(R))+(log(R{+1}))+(log(R{+2}))+(log(R{+3}))+(log(R{+4}))+(log(R{+5}))+(log(R{+6}))+(log(R{+7})))/8);
        r8__ =# 100*(R8^4 - 1);


    !transition-variables
        R20, r20__
    !log-variables
        !all-but
        r20__
    !transition-equations
        log(R20) = (((log(R))+(log(R{+1}))+(log(R{+2}))+(log(R{+3}))+(log(R{+4}))+(log(R{+5}))+(log(R{+6}))+(log(R{+7}))+(log(R{+8}))+(log(R{+9}))+(log(R{+10}))+(log(R{+11}))+(log(R{+12}))+(log(R{+13}))+(log(R{+14}))+(log(R{+15}))+(log(R{+16}))+(log(R{+17}))+(log(R{+18}))+(log(R{+19})))/20);
        r20__ =# 100*(R20^4 - 1);


    !transition-variables
        R40, r40__
    !log-variables
        !all-but
        r40__
    !transition-equations
        log(R40) = (((log(R))+(log(R{+1}))+(log(R{+2}))+(log(R{+3}))+(log(R{+4}))+(log(R{+5}))+(log(R{+6}))+(log(R{+7}))+(log(R{+8}))+(log(R{+9}))+(log(R{+10}))+(log(R{+11}))+(log(R{+12}))+(log(R{+13}))+(log(R{+14}))+(log(R{+15}))+(log(R{+16}))+(log(R{+17}))+(log(R{+18}))+(log(R{+19}))+(log(R{+20}))+(log(R{+21}))+(log(R{+22}))+(log(R{+23}))+(log(R{+24}))+(log(R{+25}))+(log(R{+26}))+(log(R{+27}))+(log(R{+28}))+(log(R{+29}))+(log(R{+30}))+(log(R{+31}))+(log(R{+32}))+(log(R{+33}))+(log(R{+34}))+(log(R{+35}))+(log(R{+36}))+(log(R{+37}))+(log(R{+38}))+(log(R{+39})))/40);
        r40__ =# 100*(R40^4 - 1);


!transition-variables
    r__
!log-variables
    !all-but
    r__ 
!transition-equations
    r__ =# 100*(R^4 - 1);
